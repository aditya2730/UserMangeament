{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthentcationGuard {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    // Only if the user is a login and Store For LocalStorage\n    let user = this.service.getToken()?.length;\n    console.log(this.service.getToken());\n    if (user) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\nAuthentcationGuard.ɵfac = function AuthentcationGuard_Factory(t) {\n  return new (t || AuthentcationGuard)(i0.ɵɵinject(i1.authService), i0.ɵɵinject(i2.Router));\n};\nAuthentcationGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthentcationGuard,\n  factory: AuthentcationGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAcA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,OAAoB,EAAUC,MAAc;IAA5C,YAAO,GAAPD,OAAO;IAAuB,WAAM,GAANC,MAAM;EAAW;EACnEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B;IACA,IAAIC,IAAI,GAAG,IAAI,CAACL,OAAO,CAACM,QAAQ,EAAE,EAAEC,MAAM;IAC1CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,CAACM,QAAQ,EAAE,CAAC;IACpC,IAAID,IAAI,EAAE;MACR,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;;AAnBWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAa,SAAlBb,kBAAkB;EAAAc,YAFjB;AAAM","names":["AuthentcationGuard","constructor","service","router","canActivate","route","state","user","getToken","length","console","log","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chaha\\OneDrive\\Desktop\\myproject\\UserMangeament\\src\\app\\user-login\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport {  Observable } from 'rxjs';\r\nimport { authService } from '../Services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthentcationGuard implements CanActivate {\r\n  constructor(private service: authService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    // Only if the user is a login and Store For LocalStorage\r\n    let user = this.service.getToken()?.length;\r\n    console.log(this.service.getToken())\r\n    if (user) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}