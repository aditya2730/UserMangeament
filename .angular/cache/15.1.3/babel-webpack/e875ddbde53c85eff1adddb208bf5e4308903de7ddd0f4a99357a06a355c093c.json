{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'https://reqres.in/api/users';\n  }\n  //Get User from ReqRes\n  getUsers(page) {\n    return this.http.get(this.url + '?page=' + page).pipe(catchError(this.handleError));\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token')?.toString();\n  }\n  login(loginInfo) {\n    return this.http.post(this.url, loginInfo).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let message = '';\n    if (error.error instanceof ErrorEvent) {\n      message = `This Error From Client Side ` + error.message;\n    } else {\n      message = `Error From Server` + error.message;\n    }\n    return throwError(() => message);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,UAAU,EAAcC,UAAU,QAAQ,MAAM;;;AAMzD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAChB,QAAG,GAAG,6BAA6B;EADJ;EAGrC;EACOC,QAAQ,CAACC,IAAY;IAC1B,OAAO,IAAI,CAACF,IAAI,CACbG,GAAG,CAAC,IAAI,CAACC,GAAG,GAAG,QAAQ,GAAGF,IAAI,CAAC,CAC/BG,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACvC;EAEFC,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC;EAEAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,EAAEC,QAAQ,EAAE;EAClD;EAEAC,KAAK,CAACC,SAAiB;IACrB,OAAO,IAAI,CAACf,IAAI,CACbgB,IAAI,CAAC,IAAI,CAACZ,GAAG,EAAEW,SAAS,CAAC,CACzBV,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EACvC;EAGAA,WAAW,CAACW,KAAwB;IAClC,IAAIC,OAAO,GAAW,EAAE;IACxB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrCD,OAAO,GAAG,8BAA8B,GAAGD,KAAK,CAACC,OAAO;KACzD,MAAM;MACLA,OAAO,GAAG,mBAAmB,GAAGD,KAAK,CAACC,OAAO;;IAE/C,OAAOrB,UAAU,CAAC,MAAMqB,OAAO,CAAC;EAClC;;AAlCWpB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["catchError","throwError","UserService","constructor","http","getUsers","page","get","url","pipe","handleError","setToken","token","localStorage","setItem","getToken","getItem","toString","login","loginInfo","post","error","message","ErrorEvent","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chaha\\OneDrive\\Desktop\\myproject\\UserMangeament\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { ILogin } from '../InterFace/ILogin';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n  private url = 'https://reqres.in/api/users';\r\n \r\n    //Get User from ReqRes\r\n    public getUsers(page: number) {\r\n      return this.http\r\n        .get(this.url + '?page=' + page)\r\n        .pipe(catchError(this.handleError));\r\n    }\r\n\r\n  setToken(token: string): void {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token')?.toString();\r\n  }\r\n\r\n  login(loginInfo: ILogin): Observable<any> {\r\n    return this.http\r\n      .post(this.url, loginInfo)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let message: string = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      message = `This Error From Client Side ` + error.message;\r\n    } else {\r\n      message = `Error From Server` + error.message;\r\n    }\r\n    return throwError(() => message);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}