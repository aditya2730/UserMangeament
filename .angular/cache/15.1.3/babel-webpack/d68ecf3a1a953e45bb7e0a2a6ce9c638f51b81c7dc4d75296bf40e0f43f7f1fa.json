{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UserLoginComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"Email this required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"is not Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1, \"Password this required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UserLoginComponent {\n  constructor(service, router, FB) {\n    this.service = service;\n    this.router = router;\n    this.FB = FB;\n  }\n  ngOnInit() {\n    this.loginForm = this.FB.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    this.service.login(this.loginForm.value).subscribe({\n      next: result => {\n        this.service.setToken(result.token);\n        this.router.navigate(['./users']);\n      },\n      error: err => {\n        this.loginForm.setValue({\n          email: '',\n          password: ''\n        });\n      }\n    });\n  }\n}\nUserLoginComponent.ɵfac = function UserLoginComponent_Factory(t) {\n  return new (t || UserLoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nUserLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserLoginComponent,\n  selectors: [[\"app-user-login\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[1, \"p-3\", \"m-3\"], [1, \"p-4\", \"m-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"my-4\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"px-2\", 4, \"ngIf\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [1, \"px-2\"]],\n  template: function UserLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"input\", 3);\n      i0.ɵɵtemplate(4, UserLoginComponent_span_4_Template, 2, 0, \"span\", 4);\n      i0.ɵɵtemplate(5, UserLoginComponent_span_5_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, UserLoginComponent_span_8_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"error try agian\"]) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"email\"]) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"error try agian\"]) && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAGEA,UAAU,QACL,gBAAgB;;;;;;;;ICDXC,+BACmD;IAAAA,mCAAmB;IAAAA,iBAAO;;;;;IAC5EA,+BACkD;IAAAA,4BAAY;IAAAA,iBAAO;;;;;IAKtEA,+BACkD;IAAAA,sCAAsB;IAAAA,iBAAO;;;ADA3F,OAAM,MAAOC,kBAAkB;EAG7BC,YACUC,OAAoB,EACpBC,MAAc,EACdC,EAAe;IAFf,YAAO,GAAPF,OAAO;IACP,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;EACT;EAEHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACT,OAAO,CAACU,KAAK,CAAC,IAAI,CAACN,SAAS,CAACO,KAAK,CAAC,CAACC,SAAS,CAAC;MACjDC,IAAI,EAAGC,MAAM,IAAI;QACf,IAAI,CAACd,OAAO,CAACe,QAAQ,CAACD,MAAM,CAACE,KAAK,CAAC;QACnC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACnC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACf,SAAS,CAACgB,QAAQ,CAAC;UACtBd,KAAK,EAAE,EAAE;UACTE,QAAQ,EAAE;SACX,CAAC;MACJ;KACD,CAAC;EACJ;;AA7BWV,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd/B5B,8BAAqB;MAEjBA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MACnB7B,8BAA6B;MACzBA,2BAAkG;MAClGA,qEAC6E;MAC5EA,qEACqE;MAC1EA,iBAAM;MAENA,8BAA6B;MACzBA,2BAAgG;MAChGA,qEAC+E;MACnFA,iBAAM;MAENA,2BAAsG;MAC1GA,iBAAO;;;;;;MAhBiBA,eAAuB;MAAvBA,yCAAuB;MAGhCA,eAC2B;MAD3BA,+NAC2B;MAC1BA,eAC0B;MAD1BA,qNAC0B;MAK3BA,eAC0B;MAD1BA,qOAC0B;MAG9BA,eAAmC;MAAnCA,gDAAmC","names":["Validators","i0","UserLoginComponent","constructor","service","router","FB","ngOnInit","loginForm","group","email","required","password","onSubmit","login","value","subscribe","next","result","setToken","token","navigate","error","err","setValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\chaha\\OneDrive\\Desktop\\myproject\\UserMangeament\\src\\app\\user-login\\user-login.component.ts","C:\\Users\\chaha\\OneDrive\\Desktop\\myproject\\UserMangeament\\src\\app\\user-login\\user-login.component.html"],"sourcesContent":["import { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { UserService } from '../Services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css'],\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n  loginForm!: FormGroup;\r\n\r\n  constructor(\r\n    private service: UserService,\r\n    private router: Router,\r\n    private FB: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.FB.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.service.login(this.loginForm.value).subscribe({\r\n      next: (result) => {\r\n        this.service.setToken(result.token);\r\n        this.router.navigate(['./users']);\r\n      },\r\n      error: (err) => {\r\n        this.loginForm.setValue({\r\n          email: '',\r\n          password: '',\r\n        });\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"p-3 m-3\">\r\n    <form class=\"p-4 m-4\"  \r\n    (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\r\n        <div class=\"form-group my-4\">\r\n            <input type=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\" formControlName=\"email\" />\r\n            <span *ngIf=\"loginForm.get('email')?.errors?.['error try agian']\r\n             && loginForm.get('email')?.touched \" class=\"px-2\">Email this required</span>\r\n             <span *ngIf=\"loginForm.get('email')?.errors?.['email']\r\n             && loginForm.get('email')?.touched \" class=\"px-2\">is not Email</span>\r\n        </div>\r\n    \r\n        <div class=\"form-group my-4\">\r\n            <input type=\"password\" placeholder=\"Password\" class=\"form-control\" formControlName=\"password\" />\r\n            <span *ngIf=\"loginForm.get('password')?.errors?.['error try agian'] && \r\n            loginForm.get('password')?.touched \" class=\"px-2\">Password this required</span>\r\n        </div>\r\n    \r\n        <input [disabled]=\"this.loginForm.invalid\" type=\"submit\" class=\"btn btn-primary w-100 \" value=\"Login\">\r\n    </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}