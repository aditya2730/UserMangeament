{"ast":null,"code":"import { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class LoginService {\n  constructor(http, service) {\n    this.http = http;\n    this.service = service;\n    this.url = 'https://reqres.in/api/users';\n  }\n  login(loginInfo) {\n    retuthis.http.post(this.url, loginInfo).pipe(catchError(this.service.handleError));\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAoBA,UAAU,QAAO,MAAM;;;;AAM3C,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe,EAASC,OAAoB;IAA5C,SAAI,GAAJD,IAAI;IAAoB,YAAO,GAAPC,OAAO;IAC3C,QAAG,GAAG,6BAA6B;EADwB;EAGnEC,KAAK,CAACC,SAAgB;IACpBC,QAAQ,CAACJ,IAAI,CACVK,IAAI,CAAC,IAAI,CAACC,GAAG,EAAEH,SAAS,CAAC,CACzBI,IAAI,CAACV,UAAU,CAAC,IAAI,CAACI,OAAO,CAACO,WAAW,CAAC,CAAC;EAC/C;;AATWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["catchError","LoginService","constructor","http","service","login","loginInfo","retuthis","post","url","pipe","handleError","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\chaha\\OneDrive\\Desktop\\myproject\\UserMangeament\\src\\app\\Services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Login } from '../models/login-model';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable,catchError} from 'rxjs';\nimport { ErrorService } from './error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http:HttpClient,private service:ErrorService) {}\n  private url = 'https://reqres.in/api/users';\n\n  login(loginInfo: Login): Observable<any> {\n    retuthis.http\n      .post(this.url, loginInfo)\n      .pipe(catchError(this.service.handleError));\n  }\n  \n  \n  \n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}